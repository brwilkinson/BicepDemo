{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    // rgName
    //"resourceGroupName": "[resourceGroup().name]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(Variables('Deployment'),'-vn'))]",
    "snWAF01Name": "snWAF01",
    "SubnetRefGW": "[concat(variables('VNetID'), '/subnets/', variables('snWAF01Name'))]",
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
    // "WAFInfo": "[parameters('DeploymentInfo').WAFInfo]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "appServiceplanInfo": "[parameters('DeploymentInfo').appServiceplanInfo]"

  },
  "resources": [
    {
      "condition": "[equals(variables('appServiceplanInfo')[copyIndex()].deploy,1)]",
      "name": "[concat(variables('Deployment'),'-asp',variables('appServiceplanInfo')[copyIndex()].Name)]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[resourceGroup().location]",
      "kind": "[variables('appServiceplanInfo')[copyIndex()].kind]",
      "copy": {
        "name": "SFLoop",
        "count": "[length( variables('appServiceplanInfo') )]"
      },
      "properties": {
        // "workerTierName": "string",
        // "hostingEnvironmentProfile": {
        //   "id": "string"
        // },
        "perSiteScaling": "[variables('appServiceplanInfo')[copyIndex()].perSiteScaling]",
        "maximumElasticWorkerCount": "[if(contains(variables('appServiceplanInfo')[copyIndex()],'maxWorkerCount'),variables('appServiceplanInfo')[copyIndex()].maxWorkerCount,json('null'))]",
        // "isSpot": "boolean",
        // "spotExpirationTime": "string",
        // "freeOfferExpirationTime": "string",
        "reserved": "[variables('appServiceplanInfo')[copyIndex()].reserved]",
        // "isXenon": "boolean",
        // "hyperV": "boolean",
        "targetWorkerCount": "[variables('appServiceplanInfo')[copyIndex()].skucapacity]"
        // "targetWorkerSizeId": "integer"
      },
      "sku": {
        "name": "[variables('appServiceplanInfo')[copyIndex()].skuname]",
        "tier": "[variables('appServiceplanInfo')[copyIndex()].skutier]",
        "capacity": "[variables('appServiceplanInfo')[copyIndex()].skucapacity]"
        // "skuCapacity": {
        //   "minimum": "integer",
        //   "maximum": "integer",
        //   "default": "integer",
        //   "scaleType": "string"
        // },
        // "locations": [
        //   "string"
        // ],
        // "capabilities": [
        //   {
        //     "name": "string",
        //     "value": "string",
        //     "reason": "string"
        //   }
        // ]
      }
    }
  ],
  "outputs": {
  }
}
